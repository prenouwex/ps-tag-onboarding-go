// Code generated by mockery v2.36.1. DO NOT EDIT.

package mocks

import (
	http "net/http"

	mock "github.com/stretchr/testify/mock"
)

// IUserController is an autogenerated mock type for the IUserController type
type IUserController struct {
	mock.Mock
}

// DeleteUser provides a mock function with given fields: w, r
func (_m *IUserController) DeleteUser(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// GetUser provides a mock function with given fields: w, r
func (_m *IUserController) GetUser(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// ListUsers provides a mock function with given fields: w, r
func (_m *IUserController) ListUsers(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// SaveUser provides a mock function with given fields: w, r
func (_m *IUserController) SaveUser(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// UpdateUser provides a mock function with given fields: w, r
func (_m *IUserController) UpdateUser(w http.ResponseWriter, r *http.Request) {
	_m.Called(w, r)
}

// NewIUserController creates a new instance of IUserController. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIUserController(t interface {
	mock.TestingT
	Cleanup(func())
}) *IUserController {
	mock := &IUserController{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
